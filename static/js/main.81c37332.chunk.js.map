{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NotesList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Note","id","text","date","handleDelete","className","onClick","size","AddNote","handleAddNote","useState","noteText","setNoteText","cols","rows","placeholder","onChange","event","target","value","length","trim","NotesList","notes","map","note","Search","handleSearch","type","Header","handleToggleDarkMode","style","color","previousDarkMode","App","nanoid","setNotes","searchNote","setSearchNote","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81c37332.chunk.js","sourcesContent":["import React from 'react'\nimport {MdDeleteForever} from 'react-icons/md'\n{/*this is our note card component\nhere am using id,text,date,handleDeleteNote as props which have been defined in App.js*/}\n\nfunction Note({id,text,date,handleDelete}) {\n    return (\n        <div className=\"note\">\n        {/*This part will contain the main note's text part*/}\n            <span>{text}</span>\n            {/*in the footer part of the note*/}\n            \n            <div className=\"note-footer\">\n            {/*it will store date on which the user is going to create the note*/} \n                <small>{date}</small>\n                {/*this is for deleting the note using each note's unique id as parameter\n                so we have passed handleDeleteNote function as it's onClick event*/}\n                <MdDeleteForever onClick={()=>handleDelete(id)} className=\"delete-icon\" size=\"1.3em\" />\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Note\n","import React,{useState} from 'react'\n{/*this component is for adding new note in our notes application*/}\nfunction AddNote({handleAddNote}) {\n{/*this noteText is the value for adding Note input*/}\n    const [noteText,setNoteText] = useState('');\n    {/*here I have fixed the note input limit with 300 characters , but you can change this\n    limit*/}\n    const charLimit = 300;\n    {/*this function is defined for the onChange event of out adding note input*/}\n    const handleChange =(event)=>{\n   {/*with typing the character limit will change with the input text's length*/}\n    if(charLimit - event.target.value.length>=0){\n        setNoteText(event.target.value)\n    }\n   \n    }\n    {/*this is for saving the new note*/}\n    \n    const handleSaveClick =() =>{\n    {/*if there's no character in input , then we will not save the note*/}\n        if(noteText.trim().length>0){\n            handleAddNote(noteText);\n            setNoteText('');\n        }\n       \n    }\n    return (\n        <div className=\"note new\">\n        {/*the text area for our input*/}\n            <textarea  cols=\"10\" rows=\"8\" placeholder=\"Type to add a new note...\"\n            onChange={handleChange} value={noteText}\n            ></textarea>\n            <div className=\"note-footer\">\n                <small>{charLimit - noteText.length} Remaining</small>\n                <button className=\"save\" onClick={handleSaveClick}>Save</button>\n            </div>\n        </div>\n    )\n}\n\nexport default AddNote\n","import React from 'react'\nimport Note from './Note'\nimport AddNote from './AddNote'\n{/* this component is storing the notes in a format*/}\n\nconst NotesList=({notes,handleAddNote,handleDelete}) =>{\n    return (\n        <div className=\"notes-list\">\n        {/*here we are going to use .map to make each note card from notes\n        and also passing the functions and other states as propas*/}\n           {notes.map((note)=>\n               <Note id={note.id} text={note.text} date={note.date}\n               handleDelete={handleDelete}\n               />\n           )}\n           <AddNote handleAddNote={handleAddNote}/>\n        </div>\n    )\n}\n\nexport default NotesList\n","import React from 'react'\nimport {MdSearch} from \"react-icons/md\"\n{/*this is our search component\nhere am using the handleSearchNote as props and we are going to use this\nas our onClick event function for searching (this actual function has been defined in App.js)*/}\nfunction Search({handleSearch}) {\n    return (\n        <div className=\"search\">\n        {/*this is our search icon within our search bar and I have fixed it's size to 1.3em*/}\n            <MdSearch className=\"search-icon\" size=\"1.4em\"/>\n            {/*this is the input tag for our search and here , I have used some onClick events for searching*/}\n            <input type=\"text\" placeholder=\"Search for your notes...\" onChange={(event)=>handleSearch(event.target.value)}/>\n        </div>\n    )\n}\n\nexport default Search\n","import React from 'react'\n\nconst Header = ({handleToggleDarkMode}) => {\n    return (\n        <div className=\"header\">\n             {/*the heading of our notes app*/}\n        <h1><span style={{color:\"#308d46\"}}>React</span> Notes</h1>\n         {/*this is our toggle button \n        using this button we can change the background theme for our application*/}\n        <button onClick={()=>handleToggleDarkMode((previousDarkMode)=>!previousDarkMode)} className=\"save\">Toggle Mode</button>\n        </div>\n    )\n}\n\nexport default Header\n","import React, { useState,useEffect } from 'react'\nimport NotesList from './components/NotesList'\nimport {nanoid} from 'nanoid'\nimport Search from './components/Search';\nimport Header from './components/Header';\n\nfunction App() {\n{/*here we are adding three dummy notes in our useState hooks for notes*/}\n  const [notes,setNotes] = useState([\n    {\n    id: nanoid(),\n    text:\"This is my first note\",\n    date:\"03/11/2021\"\n  },\n  {\n    id: nanoid(),\n    text:\"This is my second note\",\n    date:\"03/11/2021\"\n  },\n  {\n    id: nanoid(),\n    text:\"This is my third note\",\n    date:\"03/11/2021\"\n  },\n \n]);\n{/*this are the staes for searching text and toggle mode*/}\n\nconst [searchNote,setSearchNote] = useState('');\nconst [darkMode,setDarkMode] = useState(false)\n{/*to store or save the data in local storage even after closing the tab*/}\nuseEffect(()=>{\n  const savedNotes = JSON.parse(localStorage.getItem('react-notes-app-data'))\n  if(savedNotes){\n    setNotes(savedNotes)\n  }\n},[])\n{/*this is for saving the app data in local storage*/}\nuseEffect(()=>{\n  localStorage.setItem('react-notes-app-data',JSON.stringify(notes))\n},[notes])\n{/*this function is for adding new note*/}\nconst addNote = (text) =>{\n  \n  const date = new Date();\n  const newNote = {\n    id:nanoid(),\n    text : text,\n    date : date.toLocaleDateString()\n  }\n  const newNotes = [...notes,newNote]\n  setNotes(newNotes)\n}\n{/*this function is for deleting notes in note app with a id*/}\nconst deletingNote = (id) =>{\n const newNotes = notes.filter((note)=> note.id!==id);\n setNotes(newNotes)\n}\n  return (\n  \n    <div className={`${darkMode && 'dark-mode'}`}>\n          <div className=\"container\">\n      <Header handleToggleDarkMode={setDarkMode}/>\n\n      <Search handleSearch={setSearchNote}/>\n      \n      <NotesList notes={notes.filter((note)=>note.text.toLowerCase().includes(searchNote))} handleAddNote={addNote} handleDelete={deletingNote}/>\n\n    </div>\n    </div>\n\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}